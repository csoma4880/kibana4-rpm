#!/bin/sh
#
# kibana <summary>
# mdehus@gmail.com 2015-04-19: based off elasticsearch initscript
# REQUIRES daemonize (EPEL)
#
# chkconfig:   2345 80 20
# description: Starts and stops kibana on this system 
#

### BEGIN INIT INFO
# Provides: Kibana
# Required-Start: $network $named
# Required-Stop: $network $named
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: This service manages the kibana daemon
# Description: Graphical interface to Elasticsearch to enable the exploration and visualization of any kind of data
### END INIT INFO

#
# init.d / servicectl compatibility (openSUSE)
#
if [ -f /etc/rc.status ]; then
    . /etc/rc.status
    rc_reset
fi

#
# Source function library.
#
if [ -f /etc/rc.d/init.d/functions ]; then
    . /etc/rc.d/init.d/functions
fi

prog="kibana"
user="kibana"
group="kibana"
pidfile=/var/run/${prog}.pid
exec="daemonize -u $user -c /opt/kibana -p $pidfile /opt/kibana/bin/kibana -q"
lockfile=/var/lock/subsys/$prog

start() {
    echo -n $"Stopping $prog: "
    daemon --pidfile=$pidfile "$exec"
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    # stop it here, often "killproc $prog"
    killproc -p $pidfile node
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    [ $retval -eq 0 ] && rm -f $pidfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status -p $pidfile $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
